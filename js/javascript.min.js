/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/javascript.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/javascript.js":
/*!**************************!*\
  !*** ./js/javascript.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_form_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/form.js */ "./js/modules/form.js");

window.addEventListener('DOMContentLoaded', function () {
  Object(_modules_form_js__WEBPACK_IMPORTED_MODULE_0__["initForm"])();
});

/***/ }),

/***/ "./js/modules/form.js":
/*!****************************!*\
  !*** ./js/modules/form.js ***!
  \****************************/
/*! exports provided: initForm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initForm", function() { return initForm; });
var ONE_WAY_PRICE = 700;
var BOTH_WAY_PRICE = 1200;
var FORWARD_ROUTE = 'из A в B';
var BACKWARD_ROUTE = 'из B в A';
var ROUND_ROUTE = 'из A в B и обратно в A';
var ONE_WAY_DURATION = 50;
var FORWARD_TIMES = [new Date(Date.UTC(2021, 7, 21, 15)), new Date(Date.UTC(2021, 7, 21, 15, 30)), new Date(Date.UTC(2021, 7, 21, 15, 45)), new Date(Date.UTC(2021, 7, 21, 16)), new Date(Date.UTC(2021, 7, 21, 16, 15)), new Date(Date.UTC(2021, 7, 21, 18))];
var BACKWARD_TIMES = [new Date(Date.UTC(2021, 7, 21, 15, 30)), new Date(Date.UTC(2021, 7, 21, 15, 45)), new Date(Date.UTC(2021, 7, 21, 16)), new Date(Date.UTC(2021, 7, 21, 16, 15)), new Date(Date.UTC(2021, 7, 21, 16, 35)), new Date(Date.UTC(2021, 7, 21, 18, 50)), new Date(Date.UTC(2021, 7, 21, 18, 55))];
var form = document.querySelector('.form');
var routeInput = form.querySelector('#route');
var forwardTimeField = form.querySelector('.form__field--time-forward');
var forwardTimeSelect = form.querySelector('#time-forward');
var backwardTimeField = form.querySelector('.form__field--time-backward');
var backwardTimeSelect = form.querySelector('#time-backward');
var numField = form.querySelector('.form__field--num');
var numInput = form.querySelector('#num');
var addTimeOption = function addTimeOption(time, select, route) {
  var timeOption = document.createElement('option');
  timeOption.dataset.time = time;
  timeOption.value = time.toLocaleTimeString().slice(0, 5) + '(' + route + ')';
  timeOption.textContent = time.toLocaleTimeString().slice(0, 5) + '(' + route + ')';
  select.appendChild(timeOption);
};
var fillSelect = function fillSelect(array, select, route) {
  array.forEach(function (time) {
    addTimeOption(time, select, route);
  });
};
var emptySelect = function emptySelect(select) {
  for (var i = select.children.length - 1; i >= 0; i--) {
    select.children[i].remove();
  }
};
var getTime = function getTime(select) {
  for (var i = 0; i < select.children.length; i++) {
    if (select.value === select.children[i].value) {
      return new Date(select.children[i].dataset.time);
    }
  }
  return 'not find';
};
var getCruise = function getCruise() {
  var totalCost = ONE_WAY_PRICE * numInput.value;
  var totalDuration = ONE_WAY_DURATION;
  var forwardTime = getTime(forwardTimeSelect);
  var arrivalTime = getTime(forwardTimeSelect);
  if (routeInput.value === ROUND_ROUTE) {
    totalCost = BOTH_WAY_PRICE * numInput.value;
    arrivalTime = getTime(backwardTimeSelect);
  }
  if (routeInput.value === BACKWARD_ROUTE) {
    forwardTime = getTime(backwardTimeSelect);
    arrivalTime = getTime(backwardTimeSelect);
  }
  arrivalTime.setMinutes(arrivalTime.getMinutes() + ONE_WAY_DURATION);
  totalDuration = (arrivalTime - forwardTime) / 60000;
  var cruise = {
    route: routeInput.value,
    number: numInput.value,
    cost: totalCost,
    duration: totalDuration,
    forwardTime: forwardTime.toLocaleTimeString().slice(0, 5),
    arrivalTime: arrivalTime.toLocaleTimeString().slice(0, 5)
  };
  return cruise;
};
var plural = function plural(string, number) {
  if (number % 10 === 1 && number % 100 !== 11) {
    return string;
  } else if (number % 10 >= 2 && number % 10 <= 4 && (number % 100 < 10 || number % 100 >= 20)) {
    return string + 'а';
  } else {
    return string + 'ов';
  }
};
var getDurationExpression = function getDurationExpression(minutes) {
  if (minutes > 59) {
    var durationHours = Math.floor(minutes / 60);
    var durationMinutes = minutes % 60;
    return durationHours + plural(' час', durationHours) + ' ' + durationMinutes;
  }
  return minutes;
};
var getMessage = function getMessage(cruise) {
  var message = document.createElement('p');
  message.classList.add('form__message');
  var ticketString = plural('билет', cruise.number);
  var durationExpression = getDurationExpression(cruise.duration);
  message.textContent = 'Вы выбрали ' + cruise.number + ' ' + ticketString + ' по маршруту ' + cruise.route + ' стоимостью ' + cruise.cost + ' р.\nЭто путешествие займет у вас ' + durationExpression + ' минут.\nТеплоход отправляется в ' + cruise.forwardTime + ', а прибудет в ' + cruise.arrivalTime + '.';
  return message;
};
var clearMessage = function clearMessage() {
  if (form.querySelector('.form__message') !== null) {
    form.querySelector('.form__message').remove();
  }
};
var initForm = function initForm() {
  if (form !== null) {
    routeInput.selectedIndex = -1;
    forwardTimeField.hidden = true;
    backwardTimeField.hidden = true;
    numField.hidden = true;
    numInput.onfocus = function () {
      numInput.value = '';
    };
    routeInput.oninput = function () {
      emptySelect(forwardTimeSelect);
      emptySelect(backwardTimeSelect);
      numField.hidden = true;
      numInput.value = '';
      clearMessage();
      switch (routeInput.value) {
        case FORWARD_ROUTE:
          forwardTimeField.hidden = false;
          backwardTimeField.hidden = true;
          fillSelect(FORWARD_TIMES, forwardTimeSelect, FORWARD_ROUTE);
          forwardTimeSelect.selectedIndex = -1;
          forwardTimeSelect.oninput = function () {
            numField.hidden = false;
            clearMessage();
          };
          break;
        case BACKWARD_ROUTE:
          forwardTimeField.hidden = true;
          backwardTimeField.hidden = false;
          fillSelect(BACKWARD_TIMES, backwardTimeSelect, BACKWARD_ROUTE);
          backwardTimeSelect.selectedIndex = -1;
          backwardTimeSelect.oninput = function () {
            numField.hidden = false;
            clearMessage();
          };
          break;
        case ROUND_ROUTE:
          forwardTimeField.hidden = false;
          backwardTimeField.hidden = true;
          fillSelect(FORWARD_TIMES, forwardTimeSelect, FORWARD_ROUTE);
          forwardTimeSelect.selectedIndex = -1;
          forwardTimeSelect.oninput = function () {
            clearMessage();
            var arrivalTime = getTime(forwardTimeSelect);
            arrivalTime.setMinutes(arrivalTime.getMinutes() + ONE_WAY_DURATION);
            var avaliableBackwardTimes = [];
            BACKWARD_TIMES.forEach(function (backwardTime) {
              if (backwardTime > arrivalTime) {
                avaliableBackwardTimes.push(backwardTime);
              }
            });
            emptySelect(backwardTimeSelect);
            fillSelect(avaliableBackwardTimes, backwardTimeSelect, BACKWARD_ROUTE);
            backwardTimeSelect.selectedIndex = -1;
            backwardTimeField.hidden = false;
            backwardTimeSelect.oninput = function () {
              numField.hidden = false;
              clearMessage();
            };
          };
          break;
      }
    };
    form.onsubmit = function (evt) {
      evt.preventDefault();
      clearMessage();
      var cruise = getCruise();
      var message = getMessage(cruise);
      form.appendChild(message);
    };
  }
};


/***/ })

/******/ });
//# sourceMappingURL=javascript.min.js.map